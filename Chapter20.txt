--No15. PL/SQL TRIGGER

Chapter20.PL/SQL TRIGGER

　다른 저장 서브프로그램들 처럼 고유한 이름을 가지고, 데이터베이스에 저장되며, 반복적으로 호출되는 서브프로그램
　직접 호출되어 사용 될 수 없다. 특정 이벤트가 발생할 때마다 사용된다.

　용도
　· 한 테이블에 변경이 발생하면 동시에 다른테이블을 변경 시킴
　· 데이터의 변경이 데이터베이스에 저장 되기 전에 값을 검증하고 필요시 다른 값으로 변경
　· 조건 판단에 따라서 이벤트의 발생을 허용하거나 차단
　· 발생한 이벤트에 대한 로그를 남김
　· 자동으로 계산 칼럼의 값을 생성
　· 뷰(View) 에 대한  DML 문 수행 시 다른 테이블을 변경한다.( INSTEAD OF 트리거) 
　· 제약 조건으로 생성 할 수 없는 복잡한 업무 규칙을 적용하여 데이터의 무결성을 보장
　· 분산 데이터베이스 환경에서 부모 테이블과 자식 테이블 간의 참조 무결성을 보장

　20-1. 트리거의 종류
　
　　● DML 트리거
　　　테이블이나 뷰에 생성되는 트리거, INSERT, UPDATE, DELETE  DML 이벤트에 의해 실행된다.
　　　추가적인 동작이나 조건 검사를 통해 원치 않는 변경 수행시 변경을 차단하기 위한 목적으로 사용
　　● DDL 트리거
　　　데이터베이스나 특정 스키마에 DDL 이 수행되는 경우이 실행
　　　추가적인 동작을 하거나, DDL에 대한 감사 목적으로 로깅을 하거나, 
　　　조건 검사를 통해 원치 않는 DDL 수행 시 이를 차단하는 목적으로 사용
　　● 데이터베이스 트리거
　　　데이터베이스의 시작, 종료, 특정 에러의 발생, 로그인, 로그아웃 과 같은 이벤트 발생시 실행된다.

　20-2. 트리거 구조

　　● DML 트리거 구조
　　　------------------------------------------------------------
　　　CREATE OR REPLACE TRIGGER 트리거명
　　　  발생시점 DML이벤트 [ OF 칼럼명 ] ON 테이블또는뷰
　　　  참조절
　　　FOR EACH ROW
　　　WHEN (조건)
　　　DECLARE
　　　  선언부
　　　BEGIN
　　　  실행부
　　　EXCEPTION
　　　  예외처리부
　　　END;
　　　-------------------------------------------------------------
　　　
　　　- BEFORE :  트리거의 실행을 유발한 이벤트가 수행되기 전에 트리거를 실행
　　　- AFTER : 트리거의 실행을 유발한 이벤트를 수행한 후에 트리거를 실행
　　　- INSTEAD OF : 뷰에 대해 DML 을 실행할 경우 DML 대신에 트리거를 실행
　　　　이 DML 이벤트는 INSERT OR UPDATE OR DELETE 같이 OR 을 이용하여 복잡하게 구성할 수 있다.

　　　
　20-3. 트리거의 호출 순서
　　테이블에 두 개 이상의 트리거가 정의 되어있다면.
　　이런 순서를 따라 실행된다.
　　1. BEFORE 시점의 문장 단위 트리거
　　2. BEFORE 시점의 로우 단위 트리거
　　3. AFTER 시점의 로우 단위 트리거
　　4. AFTER 시점의 문장 단위 트리거
　　동일한 시점의 실행이라면 , 아래와 같이 먼저 실행될 트리거명을 지정한다.

　　　-------------------------------------------------------------
　　　FOLLOEWS 트리거명
　　　-------------------------------------------------------------
　　　
　　　-------------------------------------------------------------
　　　CREATE OR REPLACE TRIGGER tr_a
　　　BEFORE UPDATE ON emp FOR EACH ROW
　　　BEGIN
　　　  ...
　　　END;
　　　/
　　　
　　　CREATE OR REPLACE TRIGGER tr_b
　　　BEFORE UPDATE ON emp FORE EACH ROW FOLLOWS tr_a
　　　BEGIN
　　　  ...
　　　END;
　　　/
　　　-------------------------------------------------------------
　
　20-4. 트리거 제약사항
　　● 크기 : 트리거의 소스 코드 는 32KB 를 넘지 못한다. 
　　　　　　　이 이상의 크기에서는 트리거에서 서브 프로그램을 호출하는 방싱으로 변경하는 것이 옳다.
　　● LONG 타입 변수 사용 : LONG, LONG RAW 타입 선언 불가
　　● 변경 읽기 : 자신을 실행 하도록 한 DML 이 변경한 테이블을 조회, 변경 할 수 없다. 롤백된다.
　　● DDL, TCL 의 실행 : 트리거 내에서 COMMIT, ROLLBACK 트랜젝션 제어가 불가능하다. DDL 도 실행 불가하다. 
　　　　DDL, TCL 실행하려면 자치 트랜젝션을 사용해야하고, PRAGMA AUTONOMOUS_TRANSACTION을 선언해야한다.
　　● 서브프로그램 호출 : 트랜젝션 제어를 하는 서브프로그램을 호출 할 수 없다.